@model AnimationViewModel

@{ 
    var landscape = Model.Animation.Width >= Model.Animation.Height ? "landscape" : "portrait";
}

<header class="bg-dark" style="min-height: 51px"></header>
<section class="page-wrapper" style="margin-top: -51px;">
    <div id="watch-main">
        <div id="watch-content">
            <div id="player" class="player player-width landscape">
                <div id="player-container" class="player-container player-width player-height @landscape">
                    <canvas id="player-canvas"></canvas>
                </div>
                <div id="player-controls" class="player-controls" style="display: none">
                    <div class="player-buttons">
                        <a href="javascript: void(0)" class="btn btn-sm" onclick="player.togglePlay().then(player.togglePlayCallback)">
                            <i class="play fa fa-play"></i>
                            <i class="pause fa fa-pause fa-spin" style="display: none"></i>
                        </a>
                        <a href="javascript: void(0)" class="btn btn-sm" onclick="player.grafika.nextFrame()">
                            <i class="fa fa-arrow-left"></i>
                        </a>
                        <a href="javascript: void(0)" class="btn btn-sm" onclick="player.grafika.previousFrame()">
                            <i class="fa fa-arrow-right"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div style="">
                <h1 class="animation-title">@Model.Animation.Name</h1>
                <h3 class="animation-author">
                    <img class="img-circle user-avatar user-avatar-lg" src="@Model.Animation.GetAuthorThumbnail()" alt="@Model.Animation.Author" />
                    <a href="@Model.Animation.GetAuthorUrl()">
                        @Model.Animation.Author
                    </a>
                </h3>
                <h4 class="animation-details">
                    <span style="margin-right: 8px">
                        <i class="text-muted fa fa-eye"></i>&nbsp;@Model.Animation.Views
                    </span>
                    <span style="margin-right: 8px">
                        <i class="text-muted fa fa-image"></i>&nbsp;@Model.Animation.TotalFrame
                    </span>
                    <span style="margin-right: 8px">
                        <i class="text-muted fa fa-calendar"></i>&nbsp;@Model.Animation.DateTimeModified
                    </span>
                </h4>
                <p class="animation-description">@Model.Animation.Description</p>
            </div>
        </div>
        <div id="watch-sidebar" style="width: 350px; ">
            <div id="watch-ads" style="width: 350px; height: 100px; border: 1px solid #ddd; margin-bottom: 16px">
                {{ This is ads }}
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#related" aria-controls="home" role="tab" data-toggle="tab">Related</a></li>
                <li role="presentation"><a href="#comments" aria-controls="profile" role="tab" data-toggle="tab">Comments</a></li>
            </ul>            
            <!-- Tab panes -->
            <div class="tab-content" style="border-left: 1px solid #ddd; border-right: 1px solid #ddd; border-bottom: 1px solid #ddd;">
                <div role="tabpanel" class="tab-pane active" id="related" data-partial="tab" data-url="/animations/@Model.Animation.Id/related?pageSize=5">
                    Loading...
                </div>
                <div role="tabpanel" class="tab-pane" id="comments">...</div>
            </div>
        </div>
    </div>
</section>

@section scripts {
    <script type="text/javascript" src="~/js/grafika.js"></script>
    <script type="text/javascript" src="~/js/GrafikaApp.Player.js"></script>
    <script type="text/javascript" defer>
        $(document).ready(() => {
            var player = new GrafikaApp.Player('#player-canvas');
            window.player = player;

            player.togglePlayCallback = function (res) {
                if (res.isPlaying) {
                    $('i.fa-play').hide();
                    $('i.fa-pause').show();
                }
                else {
                    $('i.fa-play').show();
                    $('i.fa-pause').hide();
                }
            }
            player.loadAnimation('@Model.Animation.Id').then(function () {
                $('#player-controls').show();
            });
        });
    </script>
}

@section styles {
    <style>
        #watch-main {
            margin-left: 64px;
            margin-right: 64px;
        }

        #watch-content {
            display: inline-block;
        }

        #watch-sidebar {
            display: inline;
            vertical-align: top;
            margin-left: 16px;
            position: absolute;
        }


        .animation-title {
            margin-top: 8px;
            margin-bottom: 4px;
            display: inline-block;
        }

        .animation-details {
            margin-top: 0;
            color: #879CAB;
            font-weight: 700;
            font-size: smaller;
        }

        .animation-author {
            margin-top: 0px;
        }


        .player {
            border: 1px solid lightgray;
        }

        .player-container {
            display: flex;
            margin-right: auto;
            margin-left: auto;
        }
        .player-container > #player-canvas-wrapper {
            margin-right: auto;
            margin-left: auto;
            border-left: 1px solid lightgray;
            border-right: 1px solid lightgray;
        }

        .player-controls {
            height: 48px;
            margin-top: -48px;
            background-color: rgba(0, 0, 0, 0.50);
            position: relative;
            z-index: 30;
        }

        .player-controls > .player-buttons {
            padding: 10px;
        }

        .player-controls > .player-buttons .btn {
            background-color: Transparent;
            background-repeat: no-repeat;
            border: none;
            overflow: hidden;
            outline: none;
            color: white;
        }

        .player-controls > .player-buttons .btn:hover {
            color: rgb(26, 137, 130)
        }
        
        .player-height {
            height: 360px;
        }

        .player-width {
            width: 202px;
        }
        .player-width.landscape {
            width: 640px;
        }

        @@media screen and (max-width: 656px) {
            .player-height {
                height: 240px;
            }
        }

        @@media screen and (max-width: 656px) {
            .player-width {
                width: 135px;
            }
            .player-width.landscape {
                width: 426px;
            }
        }

        @@media screen and (min-height: 630px) and (min-width: 1294px){
            .player-height {
                height: 480px;
            }
        }
        @@media screen and (min-height: 630px) and (min-width: 1294px){
            .player-width.landscape {
                width: 269px;
            }
            .player-width.landscape {
                width: 854px;
            }
        }
    </style>
}